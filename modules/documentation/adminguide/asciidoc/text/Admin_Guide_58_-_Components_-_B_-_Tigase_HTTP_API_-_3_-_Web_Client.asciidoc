[[webClient]]
= Tigase Web Client
:author: Daniel Wisnewski
:date: 2015-26-08 08:41
:version: v1.0 August 2015

:toc:
:numbered:
:website: http://www.tigase.org

Tigase now has a fully featured XMPP client built right into the HTTP interface. Everything you would expect from an XMPP client can now be done from the comfort of your browser window with no software install required!

Lets walk through setup.

Tigase web client requires the +Http.Message.Receiver+ plugin to be active.  To enable this add the following lines to your init.properties file:

------
--comp-name-5:http
--comp-class-5:tigase.HttpMessageReceiver
------
*NOTE: If you selected HTTP API to be enabled on setup, you already have everything you need.*
This sets up an HTTP server with the default port of 8080.  See the HTTP API guide for component configuration.

To access the client, point a browser to the following address:
xmpp.your-server.net:8080/ui/

It will ask you for a login, any bare JID of users registered with the server will work.
*NOTE: Use your bare JID for login*

Once you have logged in successfully, you will be presented with the following screen.

image:images/WebUI-Home.jpg[]

The commands are broken into categories shown here.  All changes made in these sections are instant and should be seen the same as if you were using an external XMPP client like Psi.

*NOTE* The BOSH client will automatically translate all requests to the server name.  In some rare cases this may not be resolvable by the browser and you will be unable to login.  Should that happen, you may disable that feature using the following line in your init.properties:

bosh/send-node-hostname[B]=false

You may have to specifically designate the bosh URL when using the advanced tag in the login screen.

== Chat
This is the default window, and your main interface for chatting inside XMPP with this server. *NOTE: you can only communicate to users logged onto the current server, or connected clusters*
Users from your roster will be on the left panel, the right all active discussions and MUCs, as well as the currently selected chat will be available.

image:images/WebUI-Chat.jpg[]

Users that are logged in and on your roster will be displayed on the left side. Double-clicking will bring up a new chat window with the user. You can Right-click on them to bring up a sub menu with the following;

image:images/WebUI-Usersubmenu.jpg[]

- *Chat* replicates a double-click and opens a new window for chat.
- *Modify* brings up a dialogue that allows you to change the JID of the contact, a nickname, and group.
- *Delete* removes the user from your roster. This will also remove subscription authorization for the selected user to receive presence information effectively removing you from their roster. *NOTE: this will not block user packets from your JID*
- *Info* brings up the User Info (this is the disco#info command for the selected user)

The top right section has a few icons with specific functionality, they are;

image:images/WebUI-Chat-Add-New.jpg[] adds a new user to your roster.

image:images/WebUI-Chat-NewMUC.jpg[] creates a new Multi-user chatroom.

image:images/WebUI-Chat-Profile.jpg[] allows you to edit your user information such as picture and nickname.

image:images/WebUI-Chat-CloseWindow.jpg[] closes the active chat window.

image:images/WebUI-Chat-settings.jpg[] provides a place to change your password or publish changes to your user info. *NOTE: you are limited to changing the General fields*

== Discovery
This is your service discovery panel, which breaks down by component in the sidebar. Each component name and its associated JID is listed to help you find what you need. Most components give you an option to Execute commands with a few exceptions allowing browsing and the ability to join a MUC.

*Browse* allows you to dig deeper into certain components; for example list the chatrooms available in the MUC component. At the top of the page the specific JID of the component are you in will be displayed. This is a text field, and can be edited to reflect the JID of the component (or just the server name) to navigate.

image:images/WebUI-Browse-Comp.jpg[]

*Join to Room* will join you to a MUC room that is selected. Alternatively, selecting Join to Room while MUC component is selected, you can join and start a new MUC room.

*Execute Command* Provides a hierarchy of commands and options to view and edit settings, run commands and scripts, view contents of files, and see statistics. Since each Component can have a unique structure it is best to explore each to see what options are available.

== Management
This is an advanced window for settings and management for the XMPP server.

=== Configuration
==== List server/component configuration
From a drop-down menu you can view all the active components, or the server configuration (basic-conf). This is a read-only list of the current settings.

==== Manage active server components
This section gives you a drop-down menu for components
- *List* will provide a list of active running components with the following format
    component name :: componentInfo{Title=Server, Server version/revision (submission date), Class=component class} For example:
    amp :: componentInfo{Title=Tigase XMPP Server, Version=7.1.0-SNAPSHOT-b3990/574c329f (2015-08-28/10:32:06), Class=tigase.server.amp.AmpComponent}

- *Add* Allows you to activate a component in a similar way you would in the init.properties files. define a name for the component, and the class for the component. Once you click Confirm that component will be active and running.

- *Edit* will allow you to edit details of the selected component. All possible values for the component will be listed, even ones that do not have specific settings. Changes will be immediate, although changes will revert to ones specified in init.properties upon restart.

- *Remove* allows you to remove components from a dropdown list. Components will be removed upon confirmation, however settings will be reverted on server restart.

==== Manage active server plugins
Here is a list of all available plugins, and you can activate or deactivate them by checking or un-checking each one and clicking confirm. All changes are made in realtime, however changes will be reverted on server restart.

=== Notifications
This section has one simple command: to be able to send a mass message to all logged in users.  You may choose to change the type of message to headline or Normal which will show as a pop-up in most XMPP clients.  Chat messages will open up a chat dialog with users.

=== Other
This section contains a considerable list of options and settings affecting server functions.

=== Activate log tracker for a user
This allows you to set a log file to track a specific user.  Set the bare or full JID of the user you want to log, and a name of the files you wish the log to be written to. The files will be written in the root Tigase directory unless you give a directory like logs/filename. The log files will be named with a .0 extension and will be named .1, .2, .3 and so on as each file reaches 10MB by default. filename.0 will always be the most recent.
Logging will cease once the server restarts.

=== Add SSL certificate
Here you can add SSL certificates from PEM files to specific virtual hosts. Although Tigase can generate its own self-signed certificates, this will override those default certificates.

=== Add Monitor Task
You can write scripts for Groovy or ECMAScript to add to monitor tasks here. This only adds the script to available scripts however, you will need to run it from another prompt.

=== Add Monitor Timer Task
This section allows you to add monitor scripts in Groovy while using a delay setting which will delay the start of the script.

=== Add New Item - ext
Provides a method to add external components to the server. By default you are considered the owner, and the Tigase load balancer is automatically filled in.

=== Add New Item - Vhost
This allows you to add new virtual hosts to the XMPP server

=== Change user inter-domain communication permission
You can restrict users to only be able to send and receive packets to and from certain virtual hosts. This may be helpful if you want to lock users to a specific domain, or prevent them from getting information from a statistics component.

=== Connections Time
Lists the longest and average connection time from clients to servers.

=== DNS Query
A basic DNS Query form.

=== Default room config
Allows you to set the default configuration for new MUC rooms. This will not be able to modify current in use and persistent rooms.

=== Delete Monitor Task
This removes a monitor task from the list of available monitor scripts. This action is not permanent as it will revert to initial settings on server restart.

=== Fix User's Roster
You can fix a users roster from this prompt. Fill out the bare JID of the user and the names you wish to add or remove from the roster. You can edit a users roster using this tool, and changes are permanent.

=== Fix User's Roster on Tigase Cluster
This does the same as the Fix User's Roster, but can apply to users in clustered servers.

=== Get User Roster
As the title implies this gets a users' roster and displays it on screen. You can use a bare or full JID to get specific rosters.

=== Get any file
Enables you to see the contents of any file in the tigase directory. By default you are in the root directory, if you wish to go into directory use the following format:
logs/tigase.log.0

=== Get Configuration File
If you don't want to type in the location of a configuration file, you can use this prompt to bring up the contents of either tigase.conf or init.properties.

=== Get init.properties File
Will output the current init.properties file, this includes any modifications made during the current server session.

=== Load Errors
Will display any errors the server encounters in loading and running. Can be useful if you need to address any issues.

=== New command script - Monitor
Allows you to write command scripts in Groovy and store them physically so they can be saved past server restart and run at any time. Scripts written here will only be able to work on the Monitor component.

=== New command script - MUC
Allows you to write command scripts in Groovy and store them physically so they can be saved past server restart and run at any time. Scripts written here will only be able to work on the MUC component.

=== OAUth credentials
Uses OAuth to set new credentials and enable or disable a registration requirement with a signed form.

=== Pre-Bind BOSH user session
Allows admins to pre-bind a BOSH session with a full or bare JID (with the resource automatically populated on connection). You may also specify HOLD or WAIT parameters.

=== Reload component repository
This will show if you have any external components and will reload them in case of any stuck threads.

=== Scripts
This section provides a list of command scripts for all active components. Each component has the following options
- *Get list available commands* will list script commands for the component divided by either Scripts or Groups.
- *New command script* provides a method to author new command scripts for specific components written in EMCAScript or Groovy. You do have an option to save the script to disk which will make the script permanent within the server.
- *Remove command script* allows you to remove the selected script from the repository. If Remove from disk is not checked, the script will be unavailable until server restart. If it is, it will be permanently removed from the server.

You will be unable to edit or run commands from this section.

=== Statistics
These statistics might be more useful as script results yield small bits of data, but you may find them useful when looking for server loads or finding user issues.

==== Get User Statistics
Provides a script output of user statistics including how many active sessions are in use, number of packets used, specific connections and their packet usage and location. All resources will return individual stats along with IP addresses.

==== Get Active User List
Provides a list of active users under the selected domain within the server.  An active user is considered a user currently logged into the XMPP server.

==== Get list of idle users
This will list all idle users separated by vhost.

==== Get list of online users
This will list users separated by the vhost they are connected to. The list will include the bare JID as well as any resources for that JID.

==== Get number of active users
This displays the number of current active users.

==== Get number of idle users
This section returns the number of active users per specific vhost.

===== Get top active users
This will list the top number of active users by packets sent and online time. This list will only be built with users currently online and from all vhosts.

=== Users

==== Add New User
Here you can add new users to any domain handled by vHosts, users are added to database immediately and are able to login.  *NOTE: You cannot bestow admin status to these users in this section.*

==== Change user password
Allows for admins to change the password of a specific user without needing to know the original password for the selected bare JID. Users currently logged in will not know password has been changed until they attempt to re-login.

==== Delete user
Provides a text window for admins to input the bare JID of the user they wish to remove from the server.

==== Get User Info
This section allows admins to get information about a specific user including current connections as well as offline and online messages awaiting delivery.

==== Get registered user list
Provides a list of vhosts to search and a maximum number of users to list. Once run, the script will display a list of registered bare JIDs of users from the selected vhost.

==== Modify User
Allows you to modify some user details including E-mail and whether it is an active user.
